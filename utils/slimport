#!/usr/bin/perl -W
# $Id$

use Cwd;
use Getopt::Std;
use warnings;
use strict;

$ENV{PSC_TIMEOUT} = 1;

my $mp = "/arc";

sub usage {
	warn "usage: $0 [-v] [file]\n";
	exit 1;
}

my %opts;
getopts("v", \%opts) or usage;

sub cpnwalk {
	my ($fn, $f) = @_;
	my @cpn = split m[/], $fn;
	$f->(join "/", @cpn[0 .. $_]) for (3 .. $#cpn);
}

sub makeinumpath {
	my ($fn, $eo) = @_;
	my $inum = sprintf "%08lx", (stat $fn)[1];
	return "/.inum-$eo/" .
	    substr($inum, -1, 1) . "/" .
	    substr($inum, -2, 1) . "/" .
	    substr($inum, -3, 1) . "/" .
	    $inum;
}

sub sysexec {
	print join (' ', @_), "\n" if $opts{v};
	system(@_);
}

while (<>) {
	# example pathname: /usr/users/2/username/file/path/etc
	chomp;
	my $fn = Cwd::realpath($_);
	unless ($fn =~ m!^/usr/(u[eo])/!) {
		warn "skipping import of file outside archiver root: $fn\n";
		next;
	}
	my $eo = $1;
	my $ifn = makeinumpath $fn, $eo;
	my @op;
	push @op, "-v" if $opts{v};
	sysexec "slictl-$eo", "import", @op, $fn, $ifn;
	cpnwalk $fn, sub {
		my $fn = shift;
		my $s2fn = $fn;
		$s2fn =~ s!^/usr/(u[eo])/!!;
		if (-d $fn) {
			sysexec "slictl-$eo", "import", @op, $fn, $s2fn;
		} else {
			sysexec "ln", "-f", "$mp$ifn", "$mp/$s2fn";
		}
	};
}
