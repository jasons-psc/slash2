06/15/2010
----------

I want to start as simple as possible.  As we gain experience, we can be more sophisticated
as need be.  

(1) Write each unlink operation into the system log before replying the unlink RPC.

(2) Distill the log entry from the tile and write into the one of the unlink log files.

    Each unlink entry consists of the following information:
 
	* The identity of the file: SLASH FID and generation number
	* The identities of the I/O servers that have a copy of the file at the moment.

(3) Read the unlink log files and send RPCs to I/O servers.  An unlink log file will be removed when
    all relevant I/O servers have responded. 

06/16/2010
----------

Currently, we use tiling code to distill some log entries (those related to namespace
update and truncation) from the system journal for further processing.  Every log 
entry is written to the journal and the tile at the same time.  We have to adjust 
the tiles to map to different regions of the system journal as time goes by.
The main motivation of tiles is to cache the log entries and avoid reading the 
system journal again.

Since we already have a list of pending transactions, we could leverage that
list for the purpose of distilling.  That way, there is no need to maintain
tiles.  Data associated with log entries can just hang off their respective 
transaction handles.

Because we determine the current log tail by looking at the head of the list,
we can also prevent a log entry from being reused before it is distilled. 
Not all entries need to be distilled.

We also need to log some counters (bmap sequence number and SLASH FID), we
can insert them periodically in the log, so we are never worried that they
will be overwritten or do not exist at all.

Bmap sequence numbers are used to time out old bmaps on the I/O servers.
We don't do time syncronization amoung clients and servers.  So it is 
entirely up to the MDS to decide when to time out bmaps it has issued.
